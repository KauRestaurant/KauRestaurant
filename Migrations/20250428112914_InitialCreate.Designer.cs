// <auto-generated />
using System;
using KauRestaurant.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KauRestaurant.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250428112914_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("KauRestaurant.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FeedbackID");

                    b.HasIndex("UserID");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("KauRestaurant.Models.Meal", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealID"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Carbs")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<string>("MealCategory")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.HasKey("MealID");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            MealID = 1,
                            Calories = 268,
                            Carbs = 30,
                            Description = "فطائر طازجة محشوة بالجبنة المشكلة المذابة، تقدم ساخنة مع زيت الزيتون والزعتر.",
                            Fat = 12,
                            MealCategory = "الإفطار",
                            MealName = "فطائر بالجبن",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 10
                        },
                        new
                        {
                            MealID = 2,
                            Calories = 182,
                            Carbs = 2,
                            Description = "بيض مقلي على الطريقة العربية، يقدم مع الخبز العربي والخضروات الطازجة.",
                            Fat = 14,
                            MealCategory = "الإفطار",
                            MealName = "بيض مقلي",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 12
                        },
                        new
                        {
                            MealID = 3,
                            Calories = 245,
                            Carbs = 35,
                            Description = "فول مدمس مطبوخ بالطريقة التقليدية مع زيت الزيتون والثوم والليمون، غني بالبروتين النباتي.",
                            Fat = 5,
                            MealCategory = "الإفطار",
                            MealName = "فول مدمس",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 15
                        },
                        new
                        {
                            MealID = 4,
                            Calories = 213,
                            Carbs = 25,
                            Description = "حمص بالطحينة متبل بزيت الزيتون والليمون، مزين بحبات الحمص الكاملة والبقدونس.",
                            Fat = 9,
                            MealCategory = "الإفطار",
                            MealName = "حمص بالطحينة",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 8
                        },
                        new
                        {
                            MealID = 5,
                            Calories = 4,
                            Carbs = 1,
                            Description = "شاي عربي معطر بالهيل والزعفران، يقدم ساخناً في أكواب تقليدية.",
                            Fat = 0,
                            MealCategory = "الإفطار",
                            MealName = "شاي عربي",
                            MealType = "مشروب",
                            PicturePath = "/images/meal.png",
                            Protein = 0
                        },
                        new
                        {
                            MealID = 6,
                            Calories = 116,
                            Carbs = 28,
                            Description = "عصير برتقال طازج معصور في المطعم، غني بفيتامين سي والمذاق المنعش.",
                            Fat = 0,
                            MealCategory = "الإفطار",
                            MealName = "عصير برتقال طازج",
                            MealType = "مشروب",
                            PicturePath = "/images/meal.png",
                            Protein = 1
                        },
                        new
                        {
                            MealID = 7,
                            Calories = 256,
                            Carbs = 40,
                            Description = "مناقيش زعتر تقليدية مخبوزة في فرن طيني، مع مزيج الزعتر والسماق وزيت الزيتون.",
                            Fat = 8,
                            MealCategory = "الإفطار",
                            MealName = "مناقيش زعتر",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 6
                        },
                        new
                        {
                            MealID = 8,
                            Calories = 235,
                            Carbs = 15,
                            Description = "لبنة طازجة تقدم مع زيت الزيتون والزعتر والخبز العربي الطازج.",
                            Fat = 15,
                            MealCategory = "الإفطار",
                            MealName = "لبنة بالزيت",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 10
                        },
                        new
                        {
                            MealID = 9,
                            Calories = 204,
                            Carbs = 10,
                            Description = "بيض مطبوخ في صلصة طماطم غنية بالتوابل والخضروات، طبق عربي شهير.",
                            Fat = 12,
                            MealCategory = "الإفطار",
                            MealName = "شكشوكة",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 14
                        },
                        new
                        {
                            MealID = 10,
                            Calories = 286,
                            Carbs = 45,
                            Description = "فطيرة تفاح محلية الصنع مع القرفة والعسل، مخبوزة حتى ذهبية اللون.",
                            Fat = 10,
                            MealCategory = "الإفطار",
                            MealName = "فطيرة التفاح",
                            MealType = "حلوى",
                            PicturePath = "/images/meal.png",
                            Protein = 4
                        },
                        new
                        {
                            MealID = 11,
                            Calories = 100,
                            Carbs = 25,
                            Description = "عصير تفاح طازج مصنوع من تفاح موسمي، غني بالفيتامينات ومنعش المذاق.",
                            Fat = 0,
                            MealCategory = "الإفطار",
                            MealName = "عصير تفاح",
                            MealType = "مشروب",
                            PicturePath = "/images/meal.png",
                            Protein = 0
                        },
                        new
                        {
                            MealID = 12,
                            Calories = 323,
                            Carbs = 60,
                            Description = "عصيدة تقليدية محلاة بالتمر والعسل، مزينة بالمكسرات المحمصة.",
                            Fat = 7,
                            MealCategory = "الإفطار",
                            MealName = "عصيدة بالتمر",
                            MealType = "حلوى",
                            PicturePath = "/images/meal.png",
                            Protein = 5
                        },
                        new
                        {
                            MealID = 13,
                            Calories = 343,
                            Carbs = 30,
                            Description = "خبز طابون مغطى بالبصل المكرمل والسماق مع قطع الدجاج المشوي.",
                            Fat = 15,
                            MealCategory = "الإفطار",
                            MealName = "مسخن دجاج",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 22
                        },
                        new
                        {
                            MealID = 14,
                            Calories = 177,
                            Carbs = 25,
                            Description = "زبادي طبيعي محلى بالعسل ومزين بالمكسرات والفواكه الطازجة.",
                            Fat = 5,
                            MealCategory = "الإفطار",
                            MealName = "زبادي بالعسل",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 8
                        },
                        new
                        {
                            MealID = 15,
                            Calories = 326,
                            Carbs = 35,
                            Description = "كرواسون طازج محشو بالشوكولاتة الغنية، يقدم دافئاً.",
                            Fat = 18,
                            MealCategory = "الإفطار",
                            MealName = "كرواسون بالشوكولاتة",
                            MealType = "حلوى",
                            PicturePath = "/images/meal.png",
                            Protein = 6
                        },
                        new
                        {
                            MealID = 16,
                            Calories = 467,
                            Carbs = 55,
                            Description = "كبسة لحم سعودية تقليدية، مطبوخة ببهارات الكبسة المميزة مع قطع اللحم الطرية والأرز البسمتي.",
                            Fat = 15,
                            MealCategory = "الغداء",
                            MealName = "كبسة لحم",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 28
                        },
                        new
                        {
                            MealID = 17,
                            Calories = 210,
                            Carbs = 0,
                            Description = "دجاج مشوي متبل بالأعشاب والبهارات العربية، مشوي على الفحم ليكتسب نكهة مميزة.",
                            Fat = 10,
                            MealCategory = "الغداء",
                            MealName = "دجاج مشوي",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 30
                        },
                        new
                        {
                            MealID = 18,
                            Calories = 105,
                            Carbs = 12,
                            Description = "سلطة خضراء منعشة مع خضروات موسمية طازجة وتتبيلة خاصة بالمطعم.",
                            Fat = 5,
                            MealCategory = "الغداء",
                            MealName = "سلطة خضراء",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 3
                        },
                        new
                        {
                            MealID = 19,
                            Calories = 205,
                            Carbs = 30,
                            Description = "شوربة عدس تقليدية، مطبوخة بالطريقة العربية مع البهارات والليمون وزيت الزيتون.",
                            Fat = 5,
                            MealCategory = "الغداء",
                            MealName = "شوربة عدس",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 10
                        },
                        new
                        {
                            MealID = 20,
                            Calories = 375,
                            Carbs = 52,
                            Description = "أم علي، حلوى مصرية شهيرة مصنوعة من العجينة الهشة والمكسرات والحليب والقشطة.",
                            Fat = 15,
                            MealCategory = "الغداء",
                            MealName = "أم علي",
                            MealType = "حلوى",
                            PicturePath = "/images/meal.png",
                            Protein = 8
                        },
                        new
                        {
                            MealID = 21,
                            Calories = 98,
                            Carbs = 12,
                            Description = "لبن عيران منعش، مشروب تقليدي من اللبن المخفوق مع الماء والنعناع والملح.",
                            Fat = 2,
                            MealCategory = "الغداء",
                            MealName = "لبن عيران",
                            MealType = "مشروب",
                            PicturePath = "/images/meal.png",
                            Protein = 8
                        },
                        new
                        {
                            MealID = 22,
                            Calories = 448,
                            Carbs = 60,
                            Description = "برياني دجاج هندي تقليدي مع الأرز البسمتي والبهارات الهندية والخضروات.",
                            Fat = 12,
                            MealCategory = "الغداء",
                            MealName = "برياني دجاج",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 25
                        },
                        new
                        {
                            MealID = 23,
                            Calories = 482,
                            Carbs = 50,
                            Description = "مندي لحم يمني تقليدي مع الأرز المطبوخ على الفحم وبهارات المندي الخاصة.",
                            Fat = 18,
                            MealCategory = "الغداء",
                            MealName = "مندي لحم",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 30
                        },
                        new
                        {
                            MealID = 24,
                            Calories = 382,
                            Carbs = 45,
                            Description = "مجبوس سمك خليجي تقليدي مع الأرز والبهارات المميزة وقطع السمك الطازج.",
                            Fat = 10,
                            MealCategory = "الغداء",
                            MealName = "مجبوس سمك",
                            MealType = "الطبق الرئيسي",
                            PicturePath = "/images/meal.png",
                            Protein = 28
                        },
                        new
                        {
                            MealID = 25,
                            Calories = 235,
                            Carbs = 35,
                            Description = "طاجين خضار مغربي تقليدي مع البهارات المغربية والخضروات الموسمية.",
                            Fat = 7,
                            MealCategory = "الغداء",
                            MealName = "طاجين خضار",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 8
                        },
                        new
                        {
                            MealID = 26,
                            Calories = 172,
                            Carbs = 20,
                            Description = "سلطة فتوش لبنانية مع الخضروات الطازجة وقطع الخبز المحمص والسماق.",
                            Fat = 8,
                            MealCategory = "الغداء",
                            MealName = "سلطة فتوش",
                            MealType = "طبق جانبي",
                            PicturePath = "/images/meal.png",
                            Protein = 5
                        },
                        new
                        {
                            MealID = 27,
                            Calories = 505,
                            Carbs = 60,
                            Description = "كنافة عربية تقليدية محشوة بالجبنة الحلوة ومغطاة بالقطر ومزينة بالفستق الحلبي.",
                            Fat = 25,
                            MealCategory = "الغداء",
                            MealName = "كنافة",
                            MealType = "حلوى",
                            PicturePath = "/images/meal.png",
                            Protein = 10
                        },
                        new
                        {
                            MealID = 28,
                            Calories = 84,
                            Carbs = 20,
                            Description = "عصير ليمون طازج ومنعش مع النعناع، مثالي لتنشيط الجسم وتعزيز المناعة.",
                            Fat = 0,
                            MealCategory = "الغداء",
                            MealName = "عصير ليمون بالنعناع",
                            MealType = "مشروب",
                            PicturePath = "/images/meal.png",
                            Protein = 1
                        },
                        new
                        {
                            MealID = 29,
                            Calories = 415,
                            Carbs = 65,
                            Description = "بسبوسة تقليدية مصنوعة من السميد والمغطاة بشراب السكر، مزينة بالمكسرات.",
                            Fat = 15,
                            MealCategory = "الغداء",
                            MealName = "بسبوسة",
                            MealType = "حلوى",
                            PicturePath = "/images/meal.png",
                            Protein = 5
                        },
                        new
                        {
                            MealID = 30,
                            Calories = 8,
                            Carbs = 2,
                            Description = "شاي أخضر محضَّر طازجًا ومليء بمضادات الأكسدة، يُقدَّم ساخنًا أو باردًا مع لمسة نعناع.",
                            Fat = 0,
                            MealCategory = "الغداء",
                            MealName = "شاي أخضر",
                            MealType = "مشروب",
                            PicturePath = "/images/meal.png",
                            Protein = 0
                        });
                });

            modelBuilder.Entity("KauRestaurant.Models.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"));

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MenuID");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            Day = "الأحد"
                        },
                        new
                        {
                            MenuID = 2,
                            Day = "الإثنين"
                        },
                        new
                        {
                            MenuID = 3,
                            Day = "الثلاثاء"
                        },
                        new
                        {
                            MenuID = 4,
                            Day = "الأربعاء"
                        },
                        new
                        {
                            MenuID = 5,
                            Day = "الخميس"
                        },
                        new
                        {
                            MenuID = 6,
                            Day = "الجمعة"
                        },
                        new
                        {
                            MenuID = 7,
                            Day = "السبت"
                        });
                });

            modelBuilder.Entity("KauRestaurant.Models.MenuMeal", b =>
                {
                    b.Property<int>("MenuMealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuMealID"));

                    b.Property<int>("MealID")
                        .HasColumnType("int");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.HasKey("MenuMealID");

                    b.HasIndex("MealID");

                    b.HasIndex("MenuID");

                    b.ToTable("MenuMeals", (string)null);

                    b.HasData(
                        new
                        {
                            MenuMealID = 1,
                            MealID = 1,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 2,
                            MealID = 2,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 3,
                            MealID = 3,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 4,
                            MealID = 4,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 5,
                            MealID = 10,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 6,
                            MealID = 15,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 7,
                            MealID = 5,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 8,
                            MealID = 6,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 9,
                            MealID = 16,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 10,
                            MealID = 17,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 11,
                            MealID = 18,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 12,
                            MealID = 19,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 13,
                            MealID = 20,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 14,
                            MealID = 27,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 15,
                            MealID = 21,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 16,
                            MealID = 28,
                            MenuID = 1
                        },
                        new
                        {
                            MenuMealID = 17,
                            MealID = 7,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 18,
                            MealID = 9,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 19,
                            MealID = 8,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 20,
                            MealID = 14,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 21,
                            MealID = 12,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 22,
                            MealID = 15,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 23,
                            MealID = 5,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 24,
                            MealID = 11,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 25,
                            MealID = 22,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 26,
                            MealID = 24,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 27,
                            MealID = 25,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 28,
                            MealID = 26,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 29,
                            MealID = 29,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 30,
                            MealID = 20,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 31,
                            MealID = 21,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 32,
                            MealID = 30,
                            MenuID = 2
                        },
                        new
                        {
                            MenuMealID = 33,
                            MealID = 1,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 34,
                            MealID = 7,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 35,
                            MealID = 3,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 36,
                            MealID = 8,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 37,
                            MealID = 10,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 38,
                            MealID = 12,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 39,
                            MealID = 6,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 40,
                            MealID = 11,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 41,
                            MealID = 23,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 42,
                            MealID = 17,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 43,
                            MealID = 18,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 44,
                            MealID = 25,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 45,
                            MealID = 27,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 46,
                            MealID = 29,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 47,
                            MealID = 28,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 48,
                            MealID = 30,
                            MenuID = 3
                        },
                        new
                        {
                            MenuMealID = 49,
                            MealID = 2,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 50,
                            MealID = 9,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 51,
                            MealID = 4,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 52,
                            MealID = 14,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 53,
                            MealID = 15,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 54,
                            MealID = 10,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 55,
                            MealID = 5,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 56,
                            MealID = 6,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 57,
                            MealID = 16,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 58,
                            MealID = 22,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 59,
                            MealID = 19,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 60,
                            MealID = 26,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 61,
                            MealID = 20,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 62,
                            MealID = 27,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 63,
                            MealID = 21,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 64,
                            MealID = 28,
                            MenuID = 4
                        },
                        new
                        {
                            MenuMealID = 65,
                            MealID = 13,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 66,
                            MealID = 7,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 67,
                            MealID = 3,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 68,
                            MealID = 8,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 69,
                            MealID = 12,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 70,
                            MealID = 15,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 71,
                            MealID = 11,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 72,
                            MealID = 5,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 73,
                            MealID = 24,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 74,
                            MealID = 23,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 75,
                            MealID = 18,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 76,
                            MealID = 25,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 77,
                            MealID = 29,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 78,
                            MealID = 20,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 79,
                            MealID = 30,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 80,
                            MealID = 21,
                            MenuID = 5
                        },
                        new
                        {
                            MenuMealID = 81,
                            MealID = 1,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 82,
                            MealID = 2,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 83,
                            MealID = 4,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 84,
                            MealID = 14,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 85,
                            MealID = 10,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 86,
                            MealID = 12,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 87,
                            MealID = 5,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 88,
                            MealID = 6,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 89,
                            MealID = 17,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 90,
                            MealID = 22,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 91,
                            MealID = 19,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 92,
                            MealID = 26,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 93,
                            MealID = 27,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 94,
                            MealID = 29,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 95,
                            MealID = 28,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 96,
                            MealID = 30,
                            MenuID = 6
                        },
                        new
                        {
                            MenuMealID = 97,
                            MealID = 9,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 98,
                            MealID = 13,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 99,
                            MealID = 3,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 100,
                            MealID = 8,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 101,
                            MealID = 15,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 102,
                            MealID = 10,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 103,
                            MealID = 11,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 104,
                            MealID = 5,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 105,
                            MealID = 23,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 106,
                            MealID = 24,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 108,
                            MealID = 25,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 109,
                            MealID = 20,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 110,
                            MealID = 27,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 111,
                            MealID = 21,
                            MenuID = 7
                        },
                        new
                        {
                            MenuMealID = 112,
                            MealID = 28,
                            MenuID = 7
                        });
                });

            modelBuilder.Entity("KauRestaurant.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("BreakfastTicketsCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LunchTicketsCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalPaid")
                        .HasColumnType("real");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KauRestaurant.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreakfastHours")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GoogleMapsLink")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LunchHours")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WorkingDays")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BreakfastHours = "7:00 صباحاً—10:00 صباحاً",
                            ContactNumber = "0126400000",
                            Email = "restaurant@kau.edu.sa",
                            GoogleMapsLink = "https://maps.app.goo.gl/5bbXVZiGK1sJfLPw9",
                            IsOpen = true,
                            Location = "جامعة الملك عبد العزيز، طريق الجامعات، جدة، المملكة العربية السعودية",
                            LunchHours = "11:30 صباحاً—2:00 مساءً",
                            Photo = "/images/restaurant.png",
                            WorkingDays = "السبت، الأحد، الإثنين، الثلاثاء، الأربعاء، الخميس، الجمعة"
                        });
                });

            modelBuilder.Entity("KauRestaurant.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MealID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ReviewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("MealID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("KauRestaurant.Models.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketID"));

                    b.Property<bool>("IsRedeemed")
                        .HasColumnType("bit");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TicketID");

                    b.HasIndex("OrderID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("KauRestaurant.Models.TicketPrice", b =>
                {
                    b.Property<int>("TicketPriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketPriceID"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("TicketPriceID");

                    b.ToTable("TicketPrices");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("KauRestaurant.Models.Feedback", b =>
                {
                    b.HasOne("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KauRestaurant.Models.MenuMeal", b =>
                {
                    b.HasOne("KauRestaurant.Models.Meal", "Meal")
                        .WithMany("MenuMeals")
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KauRestaurant.Models.Menu", "Menu")
                        .WithMany("MenuMeals")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("KauRestaurant.Models.Order", b =>
                {
                    b.HasOne("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KauRestaurant.Models.Review", b =>
                {
                    b.HasOne("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KauRestaurant.Models.Meal", "Meal")
                        .WithMany("Reviews")
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("KauRestaurant.Models.Ticket", b =>
                {
                    b.HasOne("KauRestaurant.Models.Order", "Order")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KauRestaurant.Areas.Identity.Data.KauRestaurantUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KauRestaurant.Models.Meal", b =>
                {
                    b.Navigation("MenuMeals");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("KauRestaurant.Models.Menu", b =>
                {
                    b.Navigation("MenuMeals");
                });

            modelBuilder.Entity("KauRestaurant.Models.Order", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
