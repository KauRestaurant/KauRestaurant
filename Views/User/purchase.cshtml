@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "شراء التذاكر";
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;

    // Get ticket prices from ViewBag
    var ticketPrices = ViewBag.TicketPrices as Dictionary<string, decimal>;
    var breakfastPrice = ticketPrices != null && ticketPrices.ContainsKey("الإفطار") ? ticketPrices["الإفطار"] : 7m;
    var lunchPrice = ticketPrices != null && ticketPrices.ContainsKey("الغداء") ? ticketPrices["الغداء"] : 10m;
    var dinnerPrice = ticketPrices != null && ticketPrices.ContainsKey("العشاء") ? ticketPrices["العشاء"] : 10m;
}

<!-- Main Content Section -->
<div class="container-fluid py-4 py-lg-5 bg-white">
    <div class="container">
        <div class="card border-0 shadow">

            <!-- Card Header -->
            <div class="card-header bg-white py-3">
                <div class="d-flex justify-content-between align-items-center">
                    <h3 class="fw-bold mb-0">شراء التذاكر</h3>
                    <div>
                        <a class="btn btn-success" asp-area="User" asp-controller="Tickets" asp-action="Index">
                            <i class="bi bi-plus-lg me-2"></i>تذاكري
                        </a>
                    </div>
                </div>
            </div>

            <!-- Card Body -->
            <div class="card border-0 shadow">
                <div class="card-body p-3">
                    <!-- Hidden antiforgery token -->
                    <input type="hidden" name="__RequestVerificationToken" value="@requestToken" />
                    <input type="hidden" id="breakfastPrice" value="@breakfastPrice" />
                    <input type="hidden" id="lunchPrice" value="@lunchPrice" />
                    <input type="hidden" id="dinnerPrice" value="@dinnerPrice" />

                    <!-- Ticket Input Sections -->
                    <div class="row justify-content-center">
                        <div class="col-12" id="ticketSection">
                            <!-- Breakfast -->
                            <div class="p-4 text-center">
                                <h5 class="border-bottom pb-2 mb-3">
                                    <i class="bi bi-sun me-2"></i> الإفطار <span class="fw-bold text-success">(@breakfastPrice ريال)</span>
                                </h5>
                                <div class="d-flex align-items-center justify-content-center gap-3">
                                    <button type="button" class="btn btn-outline-success fw-bold px-3" onclick="adjustQuantity('breakfastQty', -1)">-</button>
                                    <input type="text" class="form-control text-center" style="width: 90px;" min="0" value="0" id="breakfastQty">
                                    <button type="button" class="btn btn-outline-success fw-bold px-3" onclick="adjustQuantity('breakfastQty', 1)">+</button>
                                </div>
                            </div>

                            <!-- Lunch -->
                            <div class="p-4 text-center">
                                <h5 class="border-bottom pb-2 mb-3">
                                    <i class="bi bi-brightness-high me-2"></i> الغداء <span class="fw-bold text-success">(@lunchPrice ريال)</span>
                                </h5>
                                <div class="d-flex align-items-center justify-content-center gap-3">
                                    <button type="button" class="btn btn-outline-success fw-bold px-3" onclick="adjustQuantity('lunchQty', -1)">-</button>
                                    <input type="text" class="form-control text-center" style="width: 90px;" min="0" value="0" id="lunchQty">
                                    <button type="button" class="btn btn-outline-success fw-bold px-3" onclick="adjustQuantity('lunchQty', 1)">+</button>
                                </div>
                            </div>

                            <!-- Dinner -->
                            <div class="p-4 text-center">
                                <h5 class="border-bottom pb-2 mb-3">
                                    <i class="bi bi-moon me-2"></i> العشاء <span class="fw-bold text-success">(@dinnerPrice ريال)</span>
                                </h5>
                                <div class="d-flex align-items-center justify-content-center gap-3">
                                    <button type="button" class="btn btn-outline-success fw-bold px-3" onclick="adjustQuantity('dinnerQty', -1)">-</button>
                                    <input type="text" class="form-control text-center" style="width: 90px;" min="0" value="0" id="dinnerQty">
                                    <button type="button" class="btn btn-outline-success fw-bold px-3" onclick="adjustQuantity('dinnerQty', 1)">+</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mt-4">
                        <h5 class="fw-bold mb-0">المبلغ الإجمالي</h5>
                        <h3 class="mb-0 text-success" id="grandTotal">0 ريال</h3>
                    </div>

                    <!-- Purchase Button -->
                    <button type="button" class="btn btn-success btn-lg w-100 mt-3" onclick="purchaseTickets()">
                        شراء
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function adjustQuantity(id, change) {
        const input = document.getElementById(id);
        input.value = Math.max(0, parseInt(input.value || 0) + change);
        calculateTotals();
    }

    function calculateTotals() {
        const breakfastQty = parseInt(document.getElementById('breakfastQty').value) || 0;
        const lunchQty = parseInt(document.getElementById('lunchQty').value) || 0;
        const dinnerQty = parseInt(document.getElementById('dinnerQty').value) || 0;

        const breakfastPrice = parseFloat(document.getElementById('breakfastPrice').value);
        const lunchPrice = parseFloat(document.getElementById('lunchPrice').value);
        const dinnerPrice = parseFloat(document.getElementById('dinnerPrice').value);

        const total = (breakfastQty * breakfastPrice) + (lunchQty * lunchPrice) + (dinnerQty * dinnerPrice);
        document.getElementById('grandTotal').textContent = `${total.toFixed(2)} ريال`;
    }

    function purchaseTickets() {
        const breakfastQty = parseInt(document.getElementById('breakfastQty').value) || 0;
        const lunchQty = parseInt(document.getElementById('lunchQty').value) || 0;
        const dinnerQty = parseInt(document.getElementById('dinnerQty').value) || 0;

        // Check if any tickets are selected
        if (breakfastQty === 0 && lunchQty === 0 && dinnerQty === 0) {
            alert('الرجاء اختيار عدد التذاكر أولا');
            return;
        }

        // Disable button to prevent multiple submissions
        const purchaseButton = document.querySelector('button.btn-success.btn-lg');
        purchaseButton.disabled = true;
        purchaseButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> جاري المعالجة...';

        // Prepare data
        const data = {
            breakfastQty: breakfastQty,
            lunchQty: lunchQty,
            dinnerQty: dinnerQty
        };

        console.log('Sending order data:', data);

        // Send AJAX request to create order
        fetch('/Purchase/CreateOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(data)
        })
        .then(response => {
            if (!response.ok) {
                console.error('Server returned:', response.status, response.statusText);
                throw new Error('Network response was not ok: ' + response.status);
            }
            return response.json();
        })
        .then(data => {
            console.log('Order response:', data);
            if (data.success) {
                alert('تم شراء التذاكر بنجاح! رقم الطلب: ' + data.orderId);
                window.location.href = 'tickets'; // Redirect to tickets page
            } else {
                alert('حدث خطأ أثناء معالجة الطلب');
                purchaseButton.disabled = false;
                purchaseButton.innerHTML = 'شراء';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('حدث خطأ في الاتصال. يرجى المحاولة مرة أخرى.');
            purchaseButton.disabled = false;
            purchaseButton.innerHTML = 'شراء';
        });
    }

    // Initialize totals
    calculateTotals();
</script>
