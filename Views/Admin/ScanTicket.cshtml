@{
    ViewData["Title"] = "مسح التذاكر";
}

<div class="container my-5">
    <div class="row">
        <div class="col-lg-10 col-xl-8 mx-auto">
            <!-- Main Card -->
            <div class="card border-0 shadow">
                <div class="card-header bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="mb-0"><i class="bi bi-qr-code-scan me-2"></i>مسح التذاكر</h3>
                        <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="btn btn-success">
                            <i class="bi bi-arrow-right me-1"></i> العودة للوحة التحكم
                        </a>
                    </div>
                </div>
                <div class="card-body p-4">
                    <!-- Scanner and Results in Tabs -->
                    <ul class="nav nav-tabs mb-4" id="scannerTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="scanner-tab" data-bs-toggle="tab"
                                    data-bs-target="#scanner-content" type="button" role="tab" aria-selected="true">
                                الماسح الضوئي
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="results-tab" data-bs-toggle="tab"
                                    data-bs-target="#results-content" type="button" role="tab" aria-selected="false">
                                النتائج
                            </button>
                        </li>
                    </ul>

                    <div class="tab-content" id="scannerTabsContent">
                        <!-- Scanner Tab -->
                        <div class="tab-pane fade show active" id="scanner-content" role="tabpanel">
                            <div class="text-center mb-4">
                                <p class="text-muted">قم بتوجيه الكاميرا نحو رمز QR للتذكرة للتحقق منها</p>
                                <div id="reader" class="mx-auto mb-4" style="max-width: 500px; min-height: 300px;"></div>

                                <div class="d-flex justify-content-center gap-3 mt-3">
                                    <button id="startButton" class="btn btn-success px-4">
                                        <i class="bi bi-camera me-2"></i>تشغيل الكاميرا
                                    </button>
                                    <button id="stopButton" class="btn btn-outline-danger px-4" disabled>
                                        <i class="bi bi-stop-circle me-2"></i>إيقاف المسح
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Results Tab -->
                        <div class="tab-pane fade" id="results-content" role="tabpanel">
                            <!-- Processing Message -->
                            <div id="scanResult" class="d-none">
                                <div class="text-center py-4">
                                    <div class="spinner-border text-primary mb-3" role="status"></div>
                                    <p class="mb-0">جاري التحقق من التذكرة...</p>
                                </div>
                            </div>

                            <!-- Success Result -->
                            <div id="resultSuccess" class="d-none">
                                <div class="alert alert-success mb-3">
                                    <i class="bi bi-check-circle me-2"></i> تم التحقق بنجاح
                                </div>
                                <div class="card bg-light border-0">
                                    <div class="card-body">
                                        <h5 class="card-title">معلومات التذكرة</h5>
                                        <div class="row g-3 mt-2">
                                            <div class="col-sm-6">
                                                <div class="d-flex align-items-center">
                                                    <span class="text-muted me-2">رقم التذكرة:</span>
                                                    <span id="ticketId" class="fw-bold"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="d-flex align-items-center">
                                                    <span class="text-muted me-2">نوع الوجبة:</span>
                                                    <span id="mealType" class="fw-bold"></span>
                                                </div>
                                            </div>
                                            <div class="col-12">
                                                <div class="d-flex align-items-center">
                                                    <span class="text-muted me-2">المستخدم:</span>
                                                    <span id="userName" class="fw-bold"></span>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Scan another button -->
                                        <div class="text-center mt-4">
                                            <button id="scanAnotherBtn" class="btn btn-success">
                                                <i class="bi bi-qr-code me-2"></i>مسح تذكرة أخرى
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Error Result -->
                            <div id="resultError" class="d-none">
                                <div class="alert alert-danger">
                                    <i class="bi bi-exclamation-triangle me-2"></i>
                                    <span id="errorMessage"></span>
                                </div>

                                <!-- Try again button -->
                                <div class="text-center mt-4">
                                    <button id="tryAgainBtn" class="btn btn-outline-success">
                                        <i class="bi bi-arrow-repeat me-2"></i>حاول مرة أخرى
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden form with anti-forgery token -->
    <form id="tokenForm" style="display:none;">
        @Html.AntiForgeryToken()
    </form>
</div>

@section Scripts {
    <!-- HTML5-QRCode library -->
    <script src="https://unpkg.com/html5-qrcode@2.3.8/html5-qrcode.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const html5QrCode = new Html5Qrcode("reader");
            const startButton = document.getElementById("startButton");
            const stopButton = document.getElementById("stopButton");
            const scanResult = document.getElementById("scanResult");
            const resultSuccess = document.getElementById("resultSuccess");
            const resultError = document.getElementById("resultError");
            const errorMessage = document.getElementById("errorMessage");
            const scannerTab = document.getElementById("scanner-tab");
            const resultsTab = document.getElementById("results-tab");
            const scanAnotherBtn = document.getElementById("scanAnotherBtn");
            const tryAgainBtn = document.getElementById("tryAgainBtn");

            // Setup additional event listeners
            scanAnotherBtn?.addEventListener('click', () => {
                scannerTab.click();
                startScanning();
            });

            tryAgainBtn?.addEventListener('click', () => {
                scannerTab.click();
                startScanning();
            });

            // Success callback when QR code is scanned
            function onScanSuccess(decodedText, decodedResult) {
                // Play a beep sound to notify user
                beep();

                // Stop the scanner
                html5QrCode.stop();
                updateButtonState(false);

                // Switch to results tab
                resultsTab.click();

                // Show scanning result
                scanResult.classList.remove('d-none');
                resultSuccess.classList.add('d-none');
                resultError.classList.add('d-none');

                // Validate the ticket
                validateTicket(decodedText);
            }

            // Error callback
            function onScanFailure(error) {
                // We'll handle the UI in the scan success callback
            }

            // Update button state
            function updateButtonState(isScanning) {
                if (isScanning) {
                    startButton.disabled = true;
                    stopButton.disabled = false;
                } else {
                    startButton.disabled = false;
                    stopButton.disabled = true;
                }
            }

            // Play a beep sound when QR code is successfully scanned
            function beep() {
                const audioCtx = new (window.AudioContext || window.webkitAudioContext)();
                const oscillator = audioCtx.createOscillator();
                const gainNode = audioCtx.createGain();

                oscillator.connect(gainNode);
                gainNode.connect(audioCtx.destination);

                oscillator.type = 'sine';
                oscillator.frequency.value = 800;
                gainNode.gain.value = 0.5;

                oscillator.start();
                setTimeout(() => {
                    oscillator.stop();
                }, 200);
            }

            // Function to start scanning
            function startScanning() {
                // Reset UI
                scanResult.classList.add('d-none');
                resultSuccess.classList.add('d-none');
                resultError.classList.add('d-none');

                // Request camera permissions and start scanning
                Html5Qrcode.getCameras()
                    .then(devices => {
                        if (devices && devices.length) {
                            // Start with back camera if available, otherwise use the first camera
                            const cameraId = devices.length > 1 ? devices[1].id : devices[0].id;

                            html5QrCode.start(
                                { deviceId: cameraId }, // Use specific camera if multiple are available
                                {
                                    fps: 10,
                                    qrbox: { width: 250, height: 250 }
                                },
                                onScanSuccess,
                                onScanFailure
                            ).then(() => {
                                updateButtonState(true);
                            }).catch(err => {
                                // If specific camera fails, try with environment mode
                                html5QrCode.start(
                                    { facingMode: "environment" },
                                    {
                                        fps: 10,
                                        qrbox: { width: 250, height: 250 }
                                    },
                                    onScanSuccess,
                                    onScanFailure
                                ).then(() => {
                                    updateButtonState(true);
                                }).catch(err => {
                                    alert(`خطأ في تشغيل الكاميرا: ${err}`);
                                });
                            });
                        } else {
                            alert("لم يتم العثور على كاميرات متاحة");
                        }
                    })
                    .catch(err => {
                        alert("حدث خطأ في الوصول إلى الكاميرات");
                        console.error("Error accessing cameras:", err);
                    });
            }

            // Start scanning button event listener
            startButton.addEventListener('click', startScanning);

            // Stop scanning
            stopButton.addEventListener('click', () => {
                html5QrCode.stop().then(() => {
                    updateButtonState(false);
                });
            });

            // Validate ticket with the server
            function validateTicket(qrData) {
                console.log("Validating QR data:", qrData);

                // Get the anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

                if (!token) {
                    console.error("CSRF token not found");
                }

                fetch('ScanTicket/ValidateTicket', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': token,
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify({ qrData: qrData })
                })
                .then(response => {
                    console.log("Server response status:", response.status);
                    if (!response.ok) {
                        return response.text().then(text => {
                            console.error("Error response body:", text);
                            throw new Error(`Server responded with ${response.status}`);
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    console.log("Server response data:", data);
                    scanResult.classList.add('d-none');

                    if (data.success) {
                        // Show success result
                        resultSuccess.classList.remove('d-none');
                        document.getElementById('ticketId').textContent = data.ticketDetails.ticketId;
                        document.getElementById('mealType').textContent = data.ticketDetails.mealType;
                        document.getElementById('userName').textContent = data.ticketDetails.userName;
                    } else {
                        // Show error result
                        resultError.classList.remove('d-none');
                        errorMessage.textContent = data.message;
                    }
                })
                .catch(error => {
                    console.error('Error validating ticket:', error);
                    scanResult.classList.add('d-none');
                    resultError.classList.remove('d-none');
                    errorMessage.textContent = "حدث خطأ في الاتصال بالخادم";
                });
            }
        });
    </script>
}
